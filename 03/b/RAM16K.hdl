// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/03/b/RAM16K.hdl

/**
 * Memory of 16K registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM16K {
    IN in[16], load, address[14];
    OUT out[16];

    PARTS:
    // Put your code here:

    DMux8Way16(in=in, sel[0]=address[0],sel[1]=address[1], a=a, b=b, c=c, d=d);

    DMux4Way(in=load, sel=address[0..1], a=la, b=lb, c=lc, d=ld);

    RAM4K(in=a, address=address[2..13], load=la, out=a1);
    RAM4K(in=b, address=address[2..13], load=lb, out=b1);
    RAM4K(in=c, address=address[2..13], load=lc, out=c1);
    RAM4K(in=d, address=address[2..13], load=ld, out=d1);

    Mux4Way16(a=a1, b=b1, c=c1, d=d1, sel=address[0..1], out=out);
}
